#
# Deploy with:
# sam deploy --profile fas
# or put this in samconfig.toml:
# [default.deploy.parameters]
# profile = "fas"

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Leaderboard application

Parameters:
  FQDN:
    Type: String
    Description: Fully qualified domain name
  ZoneId:
    Type: String
    Description: Route53 Zone ID

Globals:
  Function:
    Timeout: 30
  Api:
    Cors:
      AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
      AllowHeaders: "'content-type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"

Resources:
  GenerateCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref FQDN
      ValidationMethod: DNS
      DomainValidationOptions:
      - DomainName: !Ref FQDN
        HostedZoneId: !Ref ZoneId

  FlaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app/
      Handler: run.sh
      Runtime: python3.12
      MemorySize: 256
      Environment:
        Variables:
          LEADERBOARD_TABLE: !Ref LeaderboardTable
          AWS_LAMBDA_EXEC_WRAPPER: /opt/bootstrap
          PORT: 8000
      Layers:
        - !Sub arn:aws:lambda:${AWS::Region}:753240598075:layer:LambdaAdapterLayerX86:23
      Events:
        ApiEvent:
          Type: HttpApi
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref LeaderboardTable


  # Define the DynamoDB table used to hold the Leaderboard
  # We index on the name. Each entry is a JSON object whose structure is determiend at runtime.
  # The table is automatically created with 'sam deploy' and destroyed with 'sam delete'
  LeaderboardTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Leaderboard    # only needs to be unique within the account
      AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
      KeySchema:
        - AttributeName: name
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${FQDN}"
